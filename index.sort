@Pass{
@BlendFunc(ONE,ONE)
FS_PREC(mediump,float)
#ifdef VS
  attribute vec3 position;
  uniform mat4 _matPVM;
  void main(){
    gl_Position = _matPVM * vec4(position,1);
  }
#endif

#ifdef FS
uniform float _time;
uniform vec2 _viewportSize;
 vec3 ring (vec2 pos,float size){
   float distance = abs(size * 10.-length(gl_FragCoord.xy - pos));
   float color = (size / distance);
   return vec3(color)*vec3(1.-cos(_time / 1000.),1.,1.);
 }
 void main() {
   vec3 bgColor = vec3(0.,0.,0.);
   float size = 1.-cos(_time / 1000.);
   for(int i = 0; i < 20; i++){
     float x =  _viewportSize.x /2. + 90.*size * sin(_time / 1000. + float(i)*3.14/10.);
     float y =  _viewportSize.y /2. + 90.*size *cos(_time / 1000. + float(i)*3.14/10.);
     bgColor += ring(vec2(x,y),1.0);
   }
   gl_FragColor = vec4(bgColor, 1.);
 }
#endif
}
